// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: studies.sql

package db

import (
	"context"
)

const getStudy = `-- name: GetStudy :one
SELECT id, name FROM studies
WHERE id = $1 LIMIT 1
`

func (q *Queries) GetStudy(ctx context.Context, id int32) (Study, error) {
	row := q.db.QueryRow(ctx, getStudy, id)
	var i Study
	err := row.Scan(&i.ID, &i.Name)
	return i, err
}

const listStudies = `-- name: ListStudies :many
SELECT id, name FROM studies
ORDER BY name
`

func (q *Queries) ListStudies(ctx context.Context) ([]Study, error) {
	rows, err := q.db.Query(ctx, listStudies)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Study
	for rows.Next() {
		var i Study
		if err := rows.Scan(&i.ID, &i.Name); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
